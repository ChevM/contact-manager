{"version":3,"sources":["components/layout/Header.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/testComponents/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","collapseNavOnRedirect","headerNavLinks","document","getElementById","classList","contains","remove","react_default","a","createElement","className","Link","to","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-hidden","defaultProps","Context","React","createContext","reducer","state","action","Object","objectSpread","contacts","filter","contact","payload","concat","map","Consumer","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","t0","console","log","stop","children","Component","TextInputGroup","_ref","label","name","placeholder","required","onChange","error","inputClasses","classNames","is-invalid","htmlFor","AddContact","email","phone","errors","bind","assertThisInitialized","e","defineProperty","target","_onSubmit","_this$state","newContact","preventDefault","_","isEmpty","post","history","push","_x","_x2","_this2","_this$state2","onSubmit","layout_TextInputGroup","Contact","showContactInfo","toggleContactInfoVisibility","onDeleteClick","onContactInfoClick","prevState","_onDeleteClick","nativeEvent","stopImmediatePropagation","delete","finish","_x3","stopPropagation","_this$props$contact","style","cursor","role","aria-haspopup","color","data-parent","href","Contacts","sort","b","contacts_Contact","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","_res$data","match","params","_callee2","updatedContact","_context2","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.413d78d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  function collapseNavOnRedirect() {\r\n    const headerNavLinks = document.getElementById(\"headerNavLinks\");\r\n    if (headerNavLinks.classList.contains(\"show\")) {\r\n      headerNavLinks.classList.remove(\"show\");\r\n    }\r\n  }\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-1\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\" onClick={collapseNavOnRedirect}>\r\n          {branding}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#headerNavLinks\"\r\n          aria-controls=\"headerNavLinks\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse\"\r\n          id=\"headerNavLinks\"\r\n          onClick={collapseNavOnRedirect}\r\n        >\r\n          <ul className=\"navbar-nav text-right ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home fa-fw\" aria-hidden=\"true\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus fa-fw\" aria-hidden=\"true\" />\r\n                Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question fa-fw\" aria-hidden=\"true\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.concat(action.payload)\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    /**\r\n     * @param {object} action action with type and optional payload\r\n     */\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  // ! Dummy API does not give unique IDs\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n      this.setState({ contacts: res.data });\r\n    } catch (err) {\r\n      // Dummy error catching\r\n      console.log(err);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  id,\r\n  type,\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  required,\r\n  onChange,\r\n  error\r\n}) => {\r\n  const inputClasses = classNames(\"form-control\", \"form-control-lg\", {\r\n    \"is-invalid\": error\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        id={id}\r\n        className={inputClasses}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        required={required}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nexport class AddContact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async onSubmit(dispatch, e) {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    let errors = {};\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Validate input\r\n    if (_.isEmpty(name)) {\r\n      errors.name = \"Name field is required\";\r\n    }\r\n    if (_.isEmpty(email)) {\r\n      errors.email = \"Email field is required\";\r\n    }\r\n    if (_.isEmpty(phone)) {\r\n      errors.phone = \"Phone field is required\";\r\n    }\r\n    this.setState({ errors });\r\n\r\n    if (_.isEmpty(errors)) {\r\n      try {\r\n        const res = await axios.post(\r\n          \"https://jsonplaceholder.typicode.com/users\",\r\n          newContact\r\n        );\r\n\r\n        dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n        // Clear state\r\n        this.setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          errors: {}\r\n        });\r\n        // Redirect user to homepage\r\n        this.props.history.push(\"/\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col-sm-11 col-md-10 col-lg-9 mx-auto\">\r\n              <div className=\"display-4 my-3\">\r\n                <span className=\"text-primary\">Add</span> Contact\r\n              </div>\r\n              <form\r\n                onSubmit={e => this.onSubmit(dispatch, e)}\r\n                className=\"mr-auto\"\r\n              >\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  placeholder=\"Enter Name...\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  required={false}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                  id=\"\"\r\n                />\r\n                <TextInputGroup\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Enter Email...\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  id=\"\"\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  placeholder=\"Enter Phone...\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Contact\"\r\n                  className=\"btn btn-success btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// ! Removed dropdown-toggle class but Nested dropdowns will not work without dropdown-toggle\r\nexport class Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n    this.toggleContactInfoVisibility = this.toggleContactInfoVisibility.bind(\r\n      this\r\n    );\r\n    this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    this.onContactInfoClick = this.onContactInfoClick.bind(this);\r\n  }\r\n  static propTypes = {\r\n    contact: PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      email: PropTypes.string,\r\n      phone: PropTypes.string\r\n    }).isRequired\r\n  };\r\n\r\n  toggleContactInfoVisibility() {\r\n    this.setState(prevState => {\r\n      return {\r\n        showContactInfo: !prevState.showContactInfo\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Makes delete request to API and then dispatches an action to delete contact from context\r\n   * @param {number} id\r\n   * @param {function} dispatch\r\n   */\r\n  async onDeleteClick(id, dispatch, e) {\r\n    // e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n\r\n    // Dispatches in finally block instead of try, because the dummy API does not contain IDs > 12\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  }\r\n  onContactInfoClick(e) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header btn btn-light collapsed\"\r\n                onClick={this.toggleContactInfoVisibility}\r\n                id={`heading${id}`}\r\n                style={{ cursor: \"pointer\" }}\r\n                role=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target={`#collapse${id}`}\r\n                aria-expanded=\"false\"\r\n                aria-controls={`collapse${id}`}\r\n              >\r\n                <div className=\"row align-items-center justify-content-between\">\r\n                  <h5 className=\"col-auto\">\r\n                    <span>\r\n                      {name}\r\n                      <i\r\n                        className={`fas fa-xs fa-fw fa-chevron-custom mx-auto`}\r\n                      />\r\n                    </span>\r\n                  </h5>\r\n                  {/* <i\r\n                    onClick={e => this.onDeleteClick(id, dispatch, e)}\r\n                    className=\"fas fa-times text-right col-auto\"\r\n                    style={{ cursor: \"pointer\", color: \"red\" }}\r\n                  /> */}\r\n                  <div className=\"btn-group dropleft\">\r\n                    <i\r\n                      className=\"fas fa-ellipsis-v text-right col-auto\"\r\n                      role=\"button\"\r\n                      data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                      style={{ cursor: \"pointer\", color: \"gray\" }}\r\n                    />\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                      <Link\r\n                        to={`/contact/edit/${id}`}\r\n                        className=\"dropdown-item\"\r\n                        role=\"button\"\r\n                      >\r\n                        Edit\r\n                      </Link>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"dropdown-item\"\r\n                        onClick={e => this.onDeleteClick(id, dispatch, e)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ul\r\n                id={`collapse${id}`}\r\n                className=\"list-group collapse\"\r\n                data-parent=\"#accordion\"\r\n              >\r\n                <li className=\"list-group-item card-body\">\r\n                  <i className=\"fas fa-fw fa-envelope\" />\r\n                  <a href={`mailto:${email}`}>{email}</a>\r\n                </li>\r\n                <li className=\"list-group-item card-body\">\r\n                  <i className=\"fas fa-fw fa-phone\" />\r\n                  <a href={`tel:+${phone}`}>{phone}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div className=\"col-sm-11 col-md-10 col-lg-9 mx-auto\">\r\n              <h1 className=\"display-4 mb-3\">\r\n                <span className=\"text-primary\">Contact</span> List\r\n              </h1>\r\n              <div id=\"accordion\">\r\n                {contacts\r\n                  .sort((a, b) =>\r\n                    a.name < b.name ? -1 : a.name > b.name ? 1 : 0\r\n                  )\r\n                  .map(contact => (\r\n                    <Contact key={contact.id} contact={contact} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 my-3\">\r\n        <span className=\"text-primary\">About</span> Contact Manager\r\n      </h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-primary\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nexport class EditContact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n      const { name, email, phone } = res.data;\r\n\r\n      this.setState({ name, email, phone });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async onSubmit(dispatch, e) {\r\n    e.preventDefault();\r\n\r\n    const { id } = this.props.match.params;\r\n    const { name, email, phone } = this.state;\r\n\r\n    let errors = {};\r\n\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Validate input\r\n    if (_.isEmpty(name)) {\r\n      errors.name = \"Name field is required\";\r\n    }\r\n    if (_.isEmpty(email)) {\r\n      errors.email = \"Email field is required\";\r\n    }\r\n    if (_.isEmpty(phone)) {\r\n      errors.phone = \"Phone field is required\";\r\n    }\r\n    this.setState({ errors });\r\n\r\n    if (_.isEmpty(errors)) {\r\n      try {\r\n        const res = await axios.put(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`,\r\n          updatedContact\r\n        );\r\n\r\n        dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n        // Clear state\r\n        this.setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          errors: {}\r\n        });\r\n\r\n        // Redirect user to homepage\r\n        this.props.history.push(\"/\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col-sm-11 col-md-10 col-lg-9 mx-auto\">\r\n              <div className=\"display-4 my-3\">\r\n                <span className=\"text-primary\">Edit</span> Contact\r\n              </div>\r\n              <form\r\n                onSubmit={e => this.onSubmit(dispatch, e)}\r\n                className=\"mr-auto\"\r\n              >\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  placeholder=\"Enter Name...\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  required={false}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                  id=\"\"\r\n                />\r\n                <TextInputGroup\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Enter Email...\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  id=\"\"\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  placeholder=\"Enter Phone...\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Contact\"\r\n                  className=\"btn btn-success btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\n\nimport AddContact from \"./components/contacts/AddContact\";\nimport Contacts from \"./components/contacts/Contacts\";\n\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Test from \"./components/testComponents/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                {/* <Route exact path=\"/contact/:id\" component={AddContact} /> */}\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}